[versions]
kotlin = "1.6.21"
kotlin-coroutines = "1.6.2"
micronaut-gradle = "3.4.1"
kotest-gradle = "0.3.9"
git-gradle = "2.4.0"
liquibase-gradle = "2.1.1"

[libraries]
gradleplugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradleplugin-kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
#gradleplugin-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "kotlin" }
gradleplugin-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle" }
gradleplugin-micronaut-aot = { module = "io.micronaut.gradle:micronaut-aot-plugin", version.ref = "micronaut-gradle" }
gradleplugin-shadow = { module = "gradle.plugin.com.github.johnrengelman:shadow", version = "7.1.2" }
gradleplugin-kotest = { module = "io.kotest:kotest-gradle-plugin", version.ref = "kotest-gradle" }
gradleplugin-git-properties = { module = "com.gorylenko.gradle-git-properties:gradle-git-properties", version.ref = "git-gradle" }
gradleplugin-liquibase = { module = "org.liquibase:liquibase-gradle-plugin", version.ref = "liquibase-gradle" }
gradleplugin-yaml = { module = "org.yaml:snakeyaml", version = "1.30" }
gradleplugin-node = { module = "com.github.node-gradle:gradle-node-plugin", version = "3.1.1" }
gradleplugin-release = { module = "net.researchgate:gradle-release", version = "2.8.1" }
gradleplugin-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version = "10.2.1" }
gradleplugin-sonarqube = { module = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin", version = "3.3" }

kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlin-coroutines" }
kotlin-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlin-coroutines" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version = "2.1.20" }

micronaut-http-validation = { module = "io.micronaut:micronaut-http-validation" }
micronaut-data-processor = { module = "io.micronaut.data:micronaut-data-processor" }
micronaut-security-annotations = { module = "io.micronaut.security:micronaut-security-annotations" }

micronaut-http-client = { module = "io.micronaut:micronaut-http-client" }
micronaut-jackson = { module = "io.micronaut:micronaut-jackson-databind" }
micronaut-management = { module = "io.micronaut:micronaut-management" }
micronaut-runtime = { module = "io.micronaut:micronaut-runtime" }
micronaut-validation = { module = "io.micronaut:micronaut-validation" }
micronaut-data-r2dbc = { module = "io.micronaut.data:micronaut-data-r2dbc" }
micronaut-jdbc-hikari = { module = "io.micronaut.sql:micronaut-jdbc-hikari" }
micronaut-kotlin-runtime = { module = "io.micronaut.kotlin:micronaut-kotlin-runtime" }
micronaut-liquibase = { module = "io.micronaut.liquibase:micronaut-liquibase" }
micronaut-micrometer-core = { module = "io.micronaut.micrometer:micronaut-micrometer-core" }
micronaut-security-jwt = { module = "io.micronaut.security:micronaut-security-jwt" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version = "3.0.0" }

jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
logback-classic = { module = "ch.qos.logback:logback-classic" }
graalvm-svm = { module = "org.graalvm.nativeimage:svm" }
jbcrypt = { module = "org.mindrot:jbcrypt", version = "0.4" }

postgresql-jdbc = { module = "org.postgresql:postgresql", version = "42.3.1" }
postgresql-r2dbc = { module = "org.postgresql:r2dbc-postgresql" }
r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version = "0.9.0.RELEASE" }

kotlin-stats = { module = "org.nield:kotlin-statistics", version = "1.2.1" }

testcontainers = { module = "org.testcontainers:testcontainers" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }

liquibase-core = { module = "org.liquibase:liquibase-core", version = "4.5.0" }
liquibase-groovy-dsl = { module = "org.liquibase:liquibase-groovy-dsl", version = "3.0.0" }
liquibase-picocli = { module = "info.picocli:picocli", version = "4.6.1" }
liquibase-hibernate = { module = "org.liquibase.ext:liquibase-hibernate5", version = "3.6" }

test-faker = { module = "io.github.serpro69:kotlin-faker", version = "1.10.0" }
test-mockk = { module = "io.mockk:mockk", version = "1.12.3" }
test-kotest-dataset = { module = "io.kotest:kotest-framework-datatest", version = "4.6.4" }

[bundles]
micronaut-kapt = ["micronaut-http-validation", "micronaut-data-processor", "micronaut-security-annotations"]
micronaut = [
    "micronaut-http-client", "micronaut-jackson", "micronaut-management", "micronaut-runtime", "micronaut-validation",
    "micronaut-kotlin-runtime", "micronaut-data-r2dbc", "micronaut-jdbc-hikari", "micronaut-liquibase",
    "micronaut-micrometer-core", "jakarta-annotation-api", "jakarta-persistence-api", "micronaut-security-jwt"
]
kotlin = ["kotlin-reflect", "kotlin-stdlib", "kotlin-logging"]
kotlin-coroutines = ["kotlin-coroutines-core", "kotlin-coroutines-reactive", "kotlin-coroutines-reactor"]
postgresql = ["postgresql-jdbc", "postgresql-r2dbc", "r2dbc-pool"]
testcontainers = ["testcontainers", "testcontainers-r2dbc", "testcontainers-postgresql"]
ktest = ["test-mockk", "test-faker", "test-kotest-dataset"]
liquibase = ["liquibase-core", "liquibase-groovy-dsl", "liquibase-picocli", "liquibase-hibernate", "postgresql-jdbc"]
